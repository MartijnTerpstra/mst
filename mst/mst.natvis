<?xml version="1.0" encoding="utf-8"?>

<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="mst::_Details::_Refblock_ptr&lt;*&gt;">
    <DisplayString>default</DisplayString>
    <Expand/>
  </Type>

  <Type Name="mst::_Details::_Refblock_ptr_del&lt;*&gt;">
    <DisplayString>custom deleter</DisplayString>
    <Expand>
      <Item Name="[deleter]">_Deleter</Item>
    </Expand>
  </Type>

  <Type Name="mst::_Details::_Refblock_object&lt;*&gt;">
    <DisplayString>make_smart_ptr</DisplayString>
    <Expand/>
  </Type>

  <Type Name="mst::_Details::_Refblock_static&lt;*&gt;">
    <DisplayString>no block</DisplayString>
    <Expand/>
  </Type>

  <Type Name="mst::smart_ptr&lt;*&gt;">
    <!-- VC10 -->
    <DisplayString Condition="_MyPtr == 0">empty</DisplayString>
    <DisplayString Condition="(_MyPtr != 0) &amp;&amp; (_MyBlock-&gt;_MyRefs == 1)   &amp;&amp; (_MyBlock-&gt;_MyBackRefs == 0)"  >smart_ptr {*_MyPtr} [{_MyBlock-&gt;_MyRefs} ref] [{*_MyBlock}]</DisplayString>
    <DisplayString Condition="(_MyPtr != 0) &amp;&amp; (_MyBlock-&gt;_MyRefs == 1)   &amp;&amp; (_MyBlock-&gt;_MyBackRefs == 1)"  >smart_ptr {*_MyPtr} [{_MyBlock-&gt;_MyRefs} ref, {_MyBlock-&gt;_MyBackRefs} back ref] [{*_MyBlock}]</DisplayString>
    <DisplayString Condition="(_MyPtr != 0) &amp;&amp; (_MyBlock-&gt;_MyRefs == 1)   &amp;&amp; (_MyBlock-&gt;_MyBackRefs &gt; 1)">smart_ptr {*_MyPtr} [{_MyBlock-&gt;_MyRefs} ref, {_MyBlock-&gt;_MyBackRefs} back refs] [{*_MyBlock}]</DisplayString>
    <DisplayString Condition="(_MyPtr != 0) &amp;&amp; (_MyBlock-&gt;_MyRefs &gt; 1) &amp;&amp; (_MyBlock-&gt;_MyBackRefs == 0)"  >smart_ptr {*_MyPtr} [{_MyBlock-&gt;_MyRefs} refs] [{*_MyBlock}]</DisplayString>
    <DisplayString Condition="(_MyPtr != 0) &amp;&amp; (_MyBlock-&gt;_MyRefs &gt; 1) &amp;&amp; (_MyBlock-&gt;_MyBackRefs == 1)"  >smart_ptr {*_MyPtr} [{_MyBlock-&gt;_MyRefs} refs, {_MyBlock-&gt;_MyBackRefs} back ref] [{*_MyBlock}]</DisplayString>
    <DisplayString Condition="(_MyPtr != 0) &amp;&amp; (_MyBlock-&gt;_MyRefs &gt; 1) &amp;&amp; (_MyBlock-&gt;_MyBackRefs &gt; 1)">smart_ptr {*_MyPtr} [{_MyBlock-&gt;_MyRefs} refs, {_MyBlock-&gt;_MyBackRefs} back refs] [{*_MyBlock}]</DisplayString>
    <Expand>
      <Item Condition="_MyPtr != 0" Name="[ptr]">_MyPtr</Item>
      <Item Condition="_MyPtr != 0" Name="[deleter and allocator]">*_MyBlock</Item>
    </Expand>
  </Type>

  <Type Name="mst::aligned_unique_ptr&lt;*&gt;">
    <!-- VC10 -->
    <DisplayString Condition="_Myblock == 0">empty</DisplayString>
    <DisplayString Condition="_Myblock != 0"  >aligned_unique_ptr {*($T1*)&amp;_Myblock->_Mystorage}</DisplayString>
    <Expand>
      <Item Condition="_Myblock != 0" Name="[ptr]">($T1*)&amp;_Myblock->_Mystorage</Item>
    </Expand>
  </Type>

  <Type Name="mst::tidymap&lt;*&gt;">
    <DisplayString>{{ size={_MyEnd - _MyBegin} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">_MyEnd - _MyBegin</Item>
      <ArrayItems>
        <Size>_MyEnd - _MyBegin</Size>
        <ValuePointer>_MyBegin</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="mst::stridemap;">
    <DisplayString>{{ size={(_MyEnd - _MyBegin) / _MyStride} }}</DisplayString>
    <Expand>
      <Item Name="[stride]" ExcludeView="simple">_MyStride</Item>
      <Item Name="[size]" ExcludeView="simple">(_MyEnd - _MyBegin) / _MyStride</Item>
      <Item Name="[capacity]" ExcludeView="simple">(_MyLast - _MyBegin) / _MyStride</Item>
    </Expand>
  </Type>

  <Type Name="mst::stridemap_iterator&lt;*&gt;">
    <DisplayString>{*_MyPtr}</DisplayString>
    <Expand>
      <Item Name="[ptr]">($T1*)_MyPtr</Item>
      <Item Name="[stride]">_MyStride</Item>
    </Expand>
  </Type>

  <Type Name="mst::arraymap&lt;*,*&gt;">
    <DisplayString>{ _Mypair._Mysecond }</DisplayString>
    <Expand>
      <ExpandedItem>_Mypair._Mysecond</ExpandedItem>
      <!--
      <Item Name="[comp]" ExcludeView="simple">_Mypair._Mysecond</Item>
      <Item Name="[size]" ExcludeView="simple">_Mypair._Mysecond._Mypair._Myval2._Mylast - _Mypair._Mysecond._Mypair._Myval2._Myfirst</Item>
      <Item Name="[size]" ExcludeView="simple">_Mypair._Mysecond._Mypair._Myval2._Myend - _Mypair._Mysecond._Mypair._Myval2._Myfirst</Item>
      <ArrayItems>
        <Size>_Mypair._Mysecond._Mypair._Myval2._Mylast - _Mypair._Mysecond._Mypair._Myval2._Myfirst</Size>
        <ValuePointer>_Mypair._Mysecond._Mypair._Myval2._Myfirst</ValuePointer>
      </ArrayItems>
      -->
    </Expand>
  </Type>

  <Type Name="mst::dll_safe::string&lt;char&gt;">
    <DisplayString>{_Myptr,s}</DisplayString>
    <StringView>_Myptr,s</StringView>
    <Expand>
      <Item Name="[size]">_Mylength</Item>
      <Item Name="[capacity]">_Mycapacity</Item>
      <ArrayItems>
        <Size>_Mylength</Size>
        <ValuePointer>_Myptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="mst::dll_safe::string&lt;unsigned short&gt;">
    <AlternativeType Name="mst::dll_safe::string&lt;wchar_t&gt;" />
    <DisplayString>{_Myptr,su}</DisplayString>
    <StringView>_Myptr,su</StringView>
    <Expand>
      <Item Name="[size]">_Mylength</Item>
      <Item Name="[capacity]">_Mycapacity</Item>
      <ArrayItems>
        <Size>_Mylength</Size>
        <ValuePointer>_Myptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="mst::math::vector&lt;*,1&gt;">
    <DisplayString>{{ x={x} }}</DisplayString>
    <Expand>
      <Item Name="x">x</Item>
    </Expand>
  </Type>

  <Type Name="mst::math::vector&lt;*,2&gt;">
    <DisplayString>{{ x={x}, y={y} }}</DisplayString>
    <Expand>
      <Item Name="x">x</Item>
      <Item Name="y">y</Item>
    </Expand>
  </Type>

  <Type Name="mst::math::vector&lt;*,3&gt;">
    <DisplayString>{{ x={x}, y={y}, z={z} }}</DisplayString>
    <Expand>
      <Item Name="x">x</Item>
      <Item Name="y">y</Item>
      <Item Name="z">z</Item>
    </Expand>
  </Type>

  <Type Name="mst::math::vector&lt;*,4&gt;">
    <DisplayString>{{ x={x}, y={y}, z={z}, w={w} }}</DisplayString>
    <Expand>
      <Item Name="x">x</Item>
      <Item Name="y">y</Item>
      <Item Name="z">z</Item>
      <Item Name="w">w</Item>
    </Expand>
  </Type>

  <Type Name="mst::math::aabb&lt;*,1&gt;">
    <DisplayString>{{ min={_Data[0]._Data[0]}, max={_Data[1]._Data[0]} }}</DisplayString>
    <Expand>
      <Item Name="min">_Data[0]</Item>
      <Item Name="max">_Data[1]</Item>
      <Item Name="left">_Data[0]._Data[0]</Item>
      <Item Name="right">_Data[1]._Data[0]</Item>
    </Expand>
  </Type>

  <Type Name="mst::math::aabb&lt;*,2&gt;">
    <DisplayString>{{ min={{ {_Data[0]._Data[0]}, {_Data[0]._Data[1]} }}, max={{ {_Data[1]._Data[0]}, {_Data[1]._Data[1]} }} }}</DisplayString>
    <Expand>
      <Item Name="min">_Data[0]</Item>
      <Item Name="max">_Data[1]</Item>
      <Item Name="left">_Data[0]._Data[0]</Item>
      <Item Name="right">_Data[1]._Data[0]</Item>
      <Item Name="bottom">_Data[0]._Data[1]</Item>
      <Item Name="top">_Data[1]._Data[1]</Item>
    </Expand>
  </Type>

  <Type Name="mst::math::aabb&lt;*,3&gt;">
    <DisplayString>{{ min={{ {_Data[0]._Data[0]}, {_Data[0]._Data[1]}, {_Data[0]._Data[2]} }}, max={{ {_Data[1]._Data[0]}, {_Data[1]._Data[1]}, {_Data[1]._Data[1]} }} }}</DisplayString>
    <Expand>
      <Item Name="min">_Data[0]</Item>
      <Item Name="max">_Data[1]</Item>
      <Item Name="left">_Data[0]._Data[0]</Item>
      <Item Name="right">_Data[1]._Data[0]</Item>
      <Item Name="bottom">_Data[0]._Data[1]</Item>
      <Item Name="top">_Data[1]._Data[1]</Item>
      <Item Name="front">_Data[0]._Data[2]</Item>
      <Item Name="back">_Data[1]._Data[2]</Item>
    </Expand>
  </Type>

  <Type Name="mst::math::quaternion&lt;*&gt;">
    <DisplayString>{{ w={_Data[0]}, x={_Data[1]}, y={_Data[2]}, z={_Data[3]} }}</DisplayString>
    <Expand>
      <Item Name="w">_Data[0]</Item>
      <Item Name="x">_Data[1]</Item>
      <Item Name="y">_Data[2]</Item>
      <Item Name="z">_Data[3]</Item>
      <Item Name="data" ExcludeView="simple">_Data</Item>
    </Expand>
  </Type>

  <Type Name="mst::math::matrix&lt;*,*,1&gt;">
    <DisplayString>{{ {_Data[0]} }}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>$T2</Size>
        <ValuePointer>_Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="mst::math::matrix&lt;*,*,2&gt;">
    <DisplayString>{{ {_Data[0]}, {_Data[1]} }}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>$T2</Size>
        <ValuePointer>_Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="mst::math::matrix&lt;*,*,3&gt;">
    <DisplayString>{{ {_Data[0]}, {_Data[1]}, {_Data[2]} }}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>$T2</Size>
        <ValuePointer>_Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="mst::math::matrix&lt;*,*,4&gt;">
    <DisplayString>{{ {_Data[0]}, {_Data[1]}, {_Data[2]}, {_Data[3]} }}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>$T2</Size>
        <ValuePointer>_Data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="mst::iterator_range&lt;*&gt;">
    <DisplayString>{{ size={_Myend - _Mybegin} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">_Myend - _Mybegin</Item>
      <ArrayItems>
        <Size>_Myend - _Mybegin</Size>
        <ValuePointer>_Mybegin</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="mst::iterator_range&lt;std::_Vector_iterator&lt;*&gt;&gt;">
    <AlternativeType Name="mst::iterator_range&lt;std::_Vector_const_iterator&lt;*&gt;&gt;" />
    <DisplayString>{{ size={_Myend._Ptr - _Mybegin._Ptr} }}</DisplayString>
    <Expand>
      <Item Name="[size]" ExcludeView="simple">_Myend._Ptr - _Mybegin._Ptr</Item>
      <ArrayItems>
        <Size>_Myend._Ptr - _Mybegin._Ptr</Size>
        <ValuePointer>_Mybegin._Ptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <Type Name="mst::iterator_range&lt;std::_Tree_iterator&lt;*&gt;&gt;">
    <AlternativeType Name="mst::iterator_range&lt;std::_Tree_const_iterator&lt;*&gt;&gt;" />
    <DisplayString Condition="(_Mybegin._Ptr-&gt;_Isnil == 0) &amp;&amp; (_Myend._Ptr-&gt;_Isnil == 0)">{{ begin = {_Mybegin}, end = {_Myend} }}</DisplayString>
    <DisplayString Condition="(_Mybegin._Ptr-&gt;_Isnil == 0) &amp;&amp; (_Myend._Ptr-&gt;_Isnil != 0)">{{ begin = {_Mybegin}, end = end iterator }}</DisplayString>
    <DisplayString Condition="(_Mybegin._Ptr-&gt;_Isnil != 0) &amp;&amp; (_Myend._Ptr-&gt;_Isnil == 0)">{{ begin = end iterator, end = {_Myend} }}</DisplayString>
    <DisplayString Condition="(_Mybegin._Ptr-&gt;_Isnil != 0) &amp;&amp; (_Myend._Ptr-&gt;_Isnil != 0)">{{ begin = end iterator, end = end iterator }}</DisplayString>
    <Expand>
      <Item Name="[begin]" Condition="_Mybegin._Ptr-&gt;_Isnil == 0">_Mybegin</Item>
      <Synthetic Name="[begin]" Condition="_Mybegin._Ptr-&gt;_Isnil != 0">
        <DisplayString>end iterator</DisplayString>
      </Synthetic>
      <Item Name="[end]" Condition="_Myend._Ptr-&gt;_Isnil == 0">_Myend</Item>
      <Synthetic Name="[end]" Condition="_Myend._Ptr-&gt;_Isnil != 0">
        <DisplayString>end iterator</DisplayString>
      </Synthetic>
    </Expand>
  </Type>

  <Type Name="mst::iterator_range&lt;std::_List_iterator&lt;*&gt;&gt;">
    <AlternativeType Name="mst::iterator_range&lt;std::_List_const_iterator&lt;*&gt;&gt;" />
    <DisplayString>{{ begin = {_Mybegin}, end = {_Myend} }}</DisplayString>
    <Expand>
      <Item Name="[begin]">_Mybegin</Item>
      <Item Name="[end]">_Myend</Item>
    </Expand>
  </Type>

  <Type Name="mst::iterator_range&lt;mst::stridemap_iterator&lt;*&gt;&gt;">
    <DisplayString>{{ size = {(_Myend._MyPtr - _Mybegin._MyPtr) / _Mybegin._MyStride}, begin = {_Mybegin}, end = {_Myend} }}</DisplayString>
    <Expand>
      <Item Name="[begin]">_Mybegin</Item>
      <Item Name="[end]">_Myend</Item>
      <IndexListItems>
        <Size>(_Myend._MyPtr - _Mybegin._MyPtr) / _Mybegin._MyStride</Size>
        <ValueNode>*($T1*)(_Mybegin._MyPtr + $i * _Mybegin._MyStride)</ValueNode>
      </IndexListItems>
    </Expand>
  </Type>

  <Type Name="mst::iterator_range&lt;std::_Flist_iterator&lt;*&gt;&gt;">
    <AlternativeType Name="mst::iterator_range&lt;std::_Flist_const_iterator&lt;*&gt;&gt;" />
    <DisplayString>{{ begin = {_Mybegin}, end = {_Myend} }}</DisplayString>
    <Expand>
      <LinkedListItems Condition="(_Mybegin._Ptr != _Myend._Ptr)">
        <HeadPointer>_Mybegin._Ptr</HeadPointer>
        <NextPointer>_Next</NextPointer>
        <ValueNode>_Myval</ValueNode>
      </LinkedListItems>
    </Expand>
  </Type>

  <Type Name="mst::flag&lt;*,*&gt;">
    <DisplayString Condition="sizeof(_Myflags) == 1">{{ 8 bits }}</DisplayString>
    <DisplayString Condition="sizeof(_Myflags) == 2">{{ 16 bits }}</DisplayString>
    <DisplayString Condition="sizeof(_Myflags) == 4">{{ 32 bits }}</DisplayString>
    <DisplayString Condition="sizeof(_Myflags) == 8">{{ 64 bits }}</DisplayString>
    <DisplayString Condition="sizeof(_Myflags) == 16">{{ 128 bits }}</DisplayString>
    <Expand>
      <Item Name="[bit 0]" Condition="(_Myflags &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(0)</Item>
      <Item Name="[bit 0]" Condition="(_Myflags &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;0)</Item>
      <Item Name="[bit 1]" Condition="((_Myflags &gt;&gt; 1) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(1)</Item>
      <Item Name="[bit 1]" Condition="((_Myflags &gt;&gt; 1) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;1)</Item>
      <Item Name="[bit 2]" Condition="((_Myflags &gt;&gt; 2) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(2)</Item>
      <Item Name="[bit 2]" Condition="((_Myflags &gt;&gt; 2) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;2)</Item>
      <Item Name="[bit 3]" Condition="((_Myflags &gt;&gt; 3) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(3)</Item>
      <Item Name="[bit 3]" Condition="((_Myflags &gt;&gt; 3) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;3)</Item>
      <Item Name="[bit 4]" Condition="((_Myflags &gt;&gt; 4) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(4)</Item>
      <Item Name="[bit 4]" Condition="((_Myflags &gt;&gt; 4) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;4)</Item>
      <Item Name="[bit 5]" Condition="((_Myflags &gt;&gt; 5) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(5)</Item>
      <Item Name="[bit 5]" Condition="((_Myflags &gt;&gt; 5) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;5)</Item>
      <Item Name="[bit 6]" Condition="((_Myflags &gt;&gt; 6) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(6)</Item>
      <Item Name="[bit 6]" Condition="((_Myflags &gt;&gt; 6) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;6)</Item>
      <Item Name="[bit 7]" Condition="((_Myflags &gt;&gt; 7) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(7)</Item>
      <Item Name="[bit 7]" Condition="((_Myflags &gt;&gt; 7) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;7)</Item>

      <Item Name="[bit 8]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 8) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(8)</Item>
      <Item Name="[bit 8]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 8) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;8)</Item>
      <Item Name="[bit 9]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 9) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(9)</Item>
      <Item Name="[bit 9]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 9) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;9)</Item>
      <Item Name="[bit 10]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 10) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(10)</Item>
      <Item Name="[bit 10]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 10) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;10)</Item>
      <Item Name="[bit 11]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 11) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(11)</Item>
      <Item Name="[bit 11]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 11) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;11)</Item>
      <Item Name="[bit 12]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 12) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(12)</Item>
      <Item Name="[bit 12]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 12) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;12)</Item>
      <Item Name="[bit 13]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 13) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(13)</Item>
      <Item Name="[bit 13]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 13) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;13)</Item>
      <Item Name="[bit 14]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 14) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(14)</Item>
      <Item Name="[bit 14]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 14) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;14)</Item>
      <Item Name="[bit 15]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 15) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(15)</Item>
      <Item Name="[bit 15]" Condition="(sizeof(_Myflags) &gt;= 2) &amp;&amp; ((_Myflags &gt;&gt; 15) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;15)</Item>

      <Item Name="[bit 16]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 16) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(16)</Item>
      <Item Name="[bit 16]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 16) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;16)</Item>
      <Item Name="[bit 17]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 17) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(17)</Item>
      <Item Name="[bit 17]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 17) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;17)</Item>
      <Item Name="[bit 18]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 18) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(18)</Item>
      <Item Name="[bit 18]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 18) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;18)</Item>
      <Item Name="[bit 19]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 19) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(19)</Item>
      <Item Name="[bit 19]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 19) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;19)</Item>
      <Item Name="[bit 20]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 20) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(20)</Item>
      <Item Name="[bit 20]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 20) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;20)</Item>
      <Item Name="[bit 21]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 21) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(21)</Item>
      <Item Name="[bit 21]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 21) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;21)</Item>
      <Item Name="[bit 22]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 22) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(22)</Item>
      <Item Name="[bit 22]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 22) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;22)</Item>
      <Item Name="[bit 23]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 23) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(23)</Item>
      <Item Name="[bit 23]" Condition="(sizeof(_Myflags) &gt;= 3) &amp;&amp; ((_Myflags &gt;&gt; 23) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;23)</Item>

      <Item Name="[bit 24]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 24) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(24)</Item>
      <Item Name="[bit 24]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 24) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;24)</Item>
      <Item Name="[bit 25]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 25) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(25)</Item>
      <Item Name="[bit 25]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 25) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;25)</Item>
      <Item Name="[bit 26]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 26) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(26)</Item>
      <Item Name="[bit 26]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 26) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;26)</Item>
      <Item Name="[bit 27]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 27) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(27)</Item>
      <Item Name="[bit 27]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 27) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;27)</Item>
      <Item Name="[bit 28]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 28) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(28)</Item>
      <Item Name="[bit 28]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 28) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;28)</Item>
      <Item Name="[bit 29]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 29) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(29)</Item>
      <Item Name="[bit 29]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 29) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;29)</Item>
      <Item Name="[bit 30]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 30) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(30)</Item>
      <Item Name="[bit 30]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 30) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;30)</Item>
      <Item Name="[bit 31]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 31) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(31)</Item>
      <Item Name="[bit 31]" Condition="(sizeof(_Myflags) &gt;= 4) &amp;&amp; ((_Myflags &gt;&gt; 31) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;31)</Item>

      <Item Name="[bit 32]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 32) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(32)</Item>
      <Item Name="[bit 32]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 32) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;32)</Item>
      <Item Name="[bit 33]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 33) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(33)</Item>
      <Item Name="[bit 33]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 33) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;33)</Item>
      <Item Name="[bit 34]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 34) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(34)</Item>
      <Item Name="[bit 34]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 34) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;34)</Item>
      <Item Name="[bit 35]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 35) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(35)</Item>
      <Item Name="[bit 35]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 35) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;35)</Item>
      <Item Name="[bit 36]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 36) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(36)</Item>
      <Item Name="[bit 36]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 36) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;36)</Item>
      <Item Name="[bit 37]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 37) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(37)</Item>
      <Item Name="[bit 37]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 37) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;37)</Item>
      <Item Name="[bit 38]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 38) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(38)</Item>
      <Item Name="[bit 38]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 38) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;38)</Item>
      <Item Name="[bit 39]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 39) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(39)</Item>
      <Item Name="[bit 39]" Condition="(sizeof(_Myflags) &gt;= 5) &amp;&amp; ((_Myflags &gt;&gt; 39) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;39)</Item>

      <Item Name="[bit 40]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 40) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(40)</Item>
      <Item Name="[bit 40]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 40) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;40)</Item>
      <Item Name="[bit 41]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 41) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(41)</Item>
      <Item Name="[bit 41]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 41) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;41)</Item>
      <Item Name="[bit 42]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 42) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(42)</Item>
      <Item Name="[bit 42]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 42) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;42)</Item>
      <Item Name="[bit 43]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 43) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(43)</Item>
      <Item Name="[bit 43]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 43) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;43)</Item>
      <Item Name="[bit 44]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 44) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(44)</Item>
      <Item Name="[bit 44]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 44) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;44)</Item>
      <Item Name="[bit 45]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 45) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(45)</Item>
      <Item Name="[bit 45]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 45) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;45)</Item>
      <Item Name="[bit 46]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 46) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(46)</Item>
      <Item Name="[bit 46]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 46) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;46)</Item>
      <Item Name="[bit 47]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 47) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(47)</Item>
      <Item Name="[bit 47]" Condition="(sizeof(_Myflags) &gt;= 6) &amp;&amp; ((_Myflags &gt;&gt; 47) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;47)</Item>

      <Item Name="[bit 48]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 48) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(48)</Item>
      <Item Name="[bit 48]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 48) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;48)</Item>
      <Item Name="[bit 49]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 49) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(49)</Item>
      <Item Name="[bit 49]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 49) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;49)</Item>
      <Item Name="[bit 50]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 50) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(50)</Item>
      <Item Name="[bit 50]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 50) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;50)</Item>
      <Item Name="[bit 51]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 51) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(51)</Item>
      <Item Name="[bit 51]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 51) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;51)</Item>
      <Item Name="[bit 52]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 52) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(52)</Item>
      <Item Name="[bit 52]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 52) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;52)</Item>
      <Item Name="[bit 53]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 53) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(53)</Item>
      <Item Name="[bit 53]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 53) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;53)</Item>
      <Item Name="[bit 54]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 54) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(54)</Item>
      <Item Name="[bit 54]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 54) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;54)</Item>
      <Item Name="[bit 55]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 55) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(55)</Item>
      <Item Name="[bit 55]" Condition="(sizeof(_Myflags) &gt;= 7) &amp;&amp; ((_Myflags &gt;&gt; 55) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;55)</Item>

      <Item Name="[bit 56]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 56) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(56)</Item>
      <Item Name="[bit 56]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 56) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;56)</Item>
      <Item Name="[bit 57]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 57) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(57)</Item>
      <Item Name="[bit 57]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 57) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;57)</Item>
      <Item Name="[bit 58]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 58) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(58)</Item>
      <Item Name="[bit 58]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 58) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;58)</Item>
      <Item Name="[bit 59]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 59) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(59)</Item>
      <Item Name="[bit 59]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 59) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;59)</Item>
      <Item Name="[bit 60]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 60) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(60)</Item>
      <Item Name="[bit 60]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 60) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;60)</Item>
      <Item Name="[bit 61]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 61) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(61)</Item>
      <Item Name="[bit 61]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 61) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;61)</Item>
      <Item Name="[bit 62]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 62) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(62)</Item>
      <Item Name="[bit 62]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 62) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;62)</Item>
      <Item Name="[bit 63]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 63) &amp; 1 != 0) &amp;&amp; (_Preshifted == false)">($T1)(63)</Item>
      <Item Name="[bit 63]" Condition="(sizeof(_Myflags) &gt;= 8) &amp;&amp; ((_Myflags &gt;&gt; 63) &amp; 1 != 0) &amp;&amp; (_Preshifted == true)">($T1)(1&lt;&lt;63)</Item>

      <Item Name="[storage]">_Myflags</Item>
    </Expand>
  </Type>

</AutoVisualizer>